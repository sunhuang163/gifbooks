# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-10-06 15:30
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Sitelists',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120, verbose_name='Mp4网站名称')),
                ('link', models.URLField(unique=True, verbose_name='链接地址')),
                ('utf8', models.BooleanField(default=True, verbose_name='UTF-8编码')),
                ('autofetch', models.BooleanField(default=True, verbose_name='自动抓取')),
                ('disabled', models.BooleanField(default=False, verbose_name='关闭')),
                ('created_date', models.DateTimeField(auto_now_add=True, verbose_name='加入时间')),
                ('updated_date', models.DateTimeField(auto_now=True, null=True, verbose_name='更新时间')),
            ],
            options={
                'verbose_name_plural': '网站',
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('video_url', models.URLField(verbose_name='视频网址')),
                ('img_url', models.URLField(verbose_name='快照网址')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('published', models.BooleanField(default=False)),
                ('site_name', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Site', to='mp4.Sitelists')),
            ],
            options={
                'verbose_name_plural': '视频列表',
            },
        ),
        migrations.AlterUniqueTogether(
            name='video',
            unique_together=set([('site_name', 'title')]),
        ),
    ]
